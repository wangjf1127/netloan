# GitLab CI/CD 配置文件
image: node:18-alpine

# 定义阶段
stages:
  - test
  - build
  - deploy

# 缓存配置
cache:
  paths:
    - node_modules/
    - .next/cache/

# 环境变量
variables:
  NODE_ENV: "production"
  NEXT_TELEMETRY_DISABLED: "1"

# 安装依赖（所有job共享）
before_script:
  - npm ci --cache .npm --prefer-offline

# 代码质量检查
lint:
  stage: test
  script:
    - npm run lint
  only:
    - merge_requests
    - main
    - master
    - develop

# 构建测试
build_test:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - .next/
    expire_in: 1 hour
  only:
    - merge_requests
    - main
    - master
    - develop

# 部署到Vercel预览环境（MR时触发）
deploy_preview:
  stage: deploy
  image: node:18-alpine
  before_script:
    - npm install -g vercel
  script:
    - vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
    - vercel build --token=$VERCEL_TOKEN
    - DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=$VERCEL_TOKEN)
    - echo "Preview URL:$DEPLOYMENT_URL"
    - |
      if [ -n "$CI_MERGE_REQUEST_IID" ]; then
        curl -X POST \
          -H "PRIVATE-TOKEN: $GITLAB_TOKEN" \
          -H "Content-Type: application/json" \
          -d "{\"body\": \"🚀 预览部署完成！\\n\\n📱 预览地址: $DEPLOYMENT_URL\"}" \
          "$CI_API_V4_URL/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/notes"
      fi
  environment:
    name: preview
    url: $DEPLOYMENT_URL
  only:
    - merge_requests
  when: manual

# 部署到Vercel生产环境（main分支自动触发）
deploy_production:
  stage: deploy
  image: node:18-alpine
  before_script:
    - npm install -g vercel
  script:
    - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
    - vercel build --prod --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
    - echo "✅ 生产环境部署完成！"
  environment:
    name: production
    url: https://netloan.vercel.app
  only:
    - main
    - master
  when: on_success

# 手动部署到生产环境
deploy_manual:
  stage: deploy
  image: node:18-alpine
  before_script:
    - npm install -g vercel
  script:
    - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
    - vercel build --prod --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
  environment:
    name: production
    url: https://netloan.vercel.app
  only:
    - main
    - master
    - develop
  when: manual
